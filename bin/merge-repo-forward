#!/bin/bash
#
# Merge an new patch release into an existing higher version branch
# We must be on the higher branch to run this
#
# Usage (if b>d):
#   git checkout a.b.c
#   ../perfsonar-dev-tools/bin/merge-repo-forward a.d.e

WHEREAMI=$(dirname $0)
. "${WHEREAMI}/common"

# Get version parameter
VERSION=$1
if [ -z "$VERSION" ]; then
    die "Must specify VERSION as command-line option"
fi

# Initialisations
MINOR=${VERSION%.*}
TEMPFILE=`mktemp`
NEXT_VERSION=`git branch --show-current`
if [[ $VERSION > $NEXT_VERSION ]]; then
    die "Current branch ($NEXT_VERSION) is lower than $VERSION"
fi

# RPM files
SPECFILES=`find . -type f -name "*.spec*"`
MAKEFILES=`find . -type f -name Makefile`
CONFFILES=`find . -type f -name configure.ac`

# Save debian/changelog changes local to this minor branch
DEB_PKG=`perl -ne 'do {print $1; last} if /(^[^ ]+)/' debian/changelog`
perl -ne "print unless /$DEB_PKG \($MINOR/ .. eof" debian/changelog > $TEMPFILE

# Try to merge patch branch into minor branch
if git merge -m "Merging $VERSION into $NEXT_VERSION" $VERSION; then
    # All is fine!
    rm $TEMPFILE
    exit 0
else
    if git tag -l | grep -qE "^v${VERSION}$"; then
        # We have a tag from this branch, it means we need to make some special changes
        # Make sure we don't change anything in submodules
        git submodule deinit -f .
        # RPM relnum must be kept, and NEXT_VERSION must be used, not the one from the merged branch
        # In specfiles
        perl -i -0pe "s/<<<<<<< HEAD
%define perfsonar_auto_version $NEXT_VERSION(|
%define perfsonar_auto_relnum .*)
=======
%define perfsonar_auto_version ${VERSION#v}(|
%define perfsonar_auto_relnum .*)
>>>>>>> ${VERSION#v}
/%define perfsonar_auto_version $NEXT_VERSION\1
/" $SPECFILES
        if ! grep -sE "^<<<<<<< HEAD$" $SPECFILES; then
            # All conflicts are solved
            git add $SPECFILES
        fi
        if [ $MAKEFILES ]; then
            # In Makefiles
            perl -i -0pe "s/<<<<<<< HEAD
    PERFSONAR_AUTO_VERSION=$NEXT_VERSION(|
    PERFSONAR_AUTO_RELNUM=.*)
    =======
    PERFSONAR_AUTO_VERSION=${VERSION#v}(|
    PERFSONAR_AUTO_RELNUM=.*)
    >>>>>>> ${VERSION#v}
    /PERFSONAR_AUTO_VERSION=$NEXT_VERSION\1
    /" $MAKEFILES
            if ! grep -sE "^<<<<<<< HEAD$" $MAKEFILES; then
                # All conflicts are solved
                git add $MAKEFILES
            fi
        fi
        if [ $CONFFILES ]; then
            # In configure.ac (TODO: add i2util support)
            perl -i -0pe "s/<<<<<<< HEAD
    AC_INIT\(owamp, $NEXT_VERSION, owamp-bugs\@internet2.edu\)
    =======
    AC_INIT\(owamp, ${VERSION#v}, owamp-bugs\@internet2.edu\)
    >>>>>>> ${VERSION#v}
    /AC_INIT(owamp, $NEXT_VERSION, owamp-bugs\@internet2.edu)
    /" $CONFFILES
            if ! grep -sE "^<<<<<<< HEAD$" $CONFFILES; then
                # All conflicts are solved
                git add $CONFFILES
            fi
        fi

        # Keep the gbp settings from the current branch
        git checkout $NEXT_VERSION debian/gbp.conf
        # debian/changelog must always be ordered by version number (not by date)
        git checkout v${VERSION} debian/changelog
        # Remove any entries not yet released (i.e. not having a distro field like perfsonar-x.y)
        perl -i -ne "print if /$DEB_PKG \(.*\) perfsonar-$MINOR; / .. eof" debian/changelog
        # And bring back saved changes
        cat debian/changelog >> $TEMPFILE
        /bin/mv -f $TEMPFILE debian/changelog
        git add debian/changelog
        # Then, try to finalise merge
        git commit -m "Merging $VERSION into $NEXT_VERSION"
    else
        die "Automatic merge failed, need to process manually."
    fi
fi
