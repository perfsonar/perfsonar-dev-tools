#
# Common Utilities
#

WHEREAMI=$(dirname $0)
TOP="${WHEREAMI}/.."

BIN="${TOP}/bin"
LIBEXEC="${TOP}/libexec"

PATH="${WHEREAMI}:${PATH}"

#Git projects we want to release
PROJECTS=( "pscheduler" "psconfig" "toolkit" "graphs" "bundles" "owamp" "perl-shared" "psTracerouteViewer" "ls-cache-daemon" "nagios" "ls-registration-daemon" "i2util" "docs" "perfsonar-testpoint-docker" "perfsonar-tools-docker" "esmond" "maddash" "minor-packages" "perfsonar-repo" "sca-auth" "psconfig-web")

# Print something if stdout is a terminal
narrate()
{
    [ -t 1 ] && echo "$@"
}

# Emit a warning
warn()
{
    echo "$@" 1>&2
}


# Die a horrible death
die()
{
    warn "$@"
    exit 1
}


# Find the top of a Git repo relative to the current directory or one
# specified.
repo_top()
{
    [ "$1" ] && DIR=$1 || DIR="."
    [ -d "${DIR}" ] \
	|| die "${DIR}: Not a directory."

    ABSOLUTE=$(cd "${DIR}" && pwd)

    while [ "${ABSOLUTE}" ]
    do
	if [ -d "${ABSOLUTE}/.git" ]
	then
	    echo "${ABSOLUTE}"
	    return
	fi
	ABSOLUTE=$(echo "${ABSOLUTE}" | sed -e 's|/[^/]*$||')
    done

    die "$DIR: Not in a Git repo"
}


# Find the current branch of a repository
repo_has_branch()
{
    NAME="$1"
    [ "$2" ] && DIR=$2 || DIR="."
    [ -d "${DIR}" ] \
	|| die "${DIR}: Not a directory."
    (cd ${DIR} && git branch -l) \
	| awk '{ print $NF }' \
	| fgrep -x -q "${NAME}"
}

# Replace auto-generated version and relnum in RPM spec files
rpm_set_version()
{   
    [ "$1" ] && VERSION=$1 || die "Version not provided"
    [ "$2" ] && RELNUM=$2 || RELNUM="1"
    #Update .spec version
    find . -type f -name *.spec* -exec sed -i -r "s/%define perfsonar_auto_version\s+.+/%define perfsonar_auto_version ${VERSION}/" {} \;
    #Update .spec relnum
    find . -type f -name *.spec* -exec sed -i -r "s/%define perfsonar_auto_relnum\s+.+/%define perfsonar_auto_relnum ${RELNUM}/" {} \;
    #Update Makefile version
    find . -type f -name Makefile -exec sed -i -r "s/PERFSONAR_AUTO_VERSION=.+/PERFSONAR_AUTO_VERSION=${VERSION}/" {} \;
    #Update Makefile relnum
    find . -type f -name Makefile -exec sed -i -r "s/PERFSONAR_AUTO_RELNUM=.+/PERFSONAR_AUTO_RELNUM=${RELNUM}/" {} \;
    #Update pom.xml version - TODO: Uncomment in 4.2.0
    #find . -type f -name pom.xml -exec sed -i -r "s/<perfsonar.auto.version>.+<\/perfsonar.auto.version>/<perfsonar.auto.version>${VERSION}<\/perfsonar.auto.version>/" {} \;
    
    #Commit changes to .spec version and relnum
    HAS_CHANGED=$(git status | grep modified)
    if [ -n "$HAS_CHANGED" ]; then
        git commit -a -m "Bumping RPM spec version to ${VERSION}-${RELNUM}"
    fi
}
