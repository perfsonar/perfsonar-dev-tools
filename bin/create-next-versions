#!/bin/sh -e
#
# Close the current branch of the current repository.
#

WHEREAMI=$(dirname $0)
. "${WHEREAMI}/common"

[ "$1" ] && WHERE="$1" || WHERE="."

GIT_DIR=$(repo_top "${WHERE}")/.git
export GIT_DIR

THIS_BRANCH=$(git branch -l | awk '$1 == "*" { print $2 }')

# Create new branches from this one if they don't already exist

CHANGED=false
RELNUM="0.a0.0"

for VERSION in $("${WHEREAMI}/next-versions" "${THIS_BRANCH}")
do
    VERSION="$(echo "${VERSION}" | tr -d '[:space:]')" #trim whitespace
    HAS_BRANCH=$(git branch --list -r "origin/${VERSION}")
    if [ -n "$HAS_BRANCH" ]; then
        narrate "Repo already has a branch ${VERSION}"
        continue
    fi
    git checkout -b "${VERSION}"
    # Make sure we don't change anything in submodules
    git submodule deinit -f .
    rpm_set_version "$VERSION" "$RELNUM" || :
    deb_set_new_version "$VERSION" "$RELNUM" || :
    git commit -m "Preparing packaging for next version: v$VERSION-$RELNUM"
    git push origin "${VERSION}"
    git branch --set-upstream-to="origin/${VERSION}" "${VERSION}"
    CHANGED=true
done

if ${CHANGED}
then
    narrate Pushing changes
    git push --all
fi
